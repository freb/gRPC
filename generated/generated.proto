// Code generated by gnorm, DO NOT EDIT!
syntax = "proto3";

package generated;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option go_package = "generated";

enum BookType {
  FICTION    = 0;
  NONFICTION = 1;
}

message Authors {
  string id   = 1 [(gogoproto.customname) = "ID"];  // (PK)
  string name = 2 [(gogoproto.customname) = "Name"];
}

message ListAuthorsRequest {
  // The fields on this ListAuthorsRequest are used to filter for rows from
  // the authors table backend. The templates generate fields for primary and
  // foreign keys automatically. If additional fields are needed for filtering, they
  // would need to be added after code generation.
  repeated string id = 1 [(gogoproto.customname) = "ID"];  // (PK)

  // Manually added filters:
}

message ListAuthorsResponse {
  repeated Authors authors = 1 [(gogoproto.customname) = "Authors"];
}

message GetAuthorsRequest {
  string id = 1 [(gogoproto.customname) = "ID"];  // (PK)
}

message CreateAuthorsRequest {
  Authors authors = 1 [(gogoproto.customname) = "Authors"];
}

message UpdateAuthorsRequest {
  Authors                   authors     = 1 [(gogoproto.customname) = "Authors"];
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteAuthorsRequest {
  string id = 1 [(gogoproto.customname) = "ID"];  // (PK)
}

message Books {
  int32                       id        = 1 [(gogoproto.customname) = "ID"];  // (PK)
  string                      author_id = 2 [(gogoproto.customname) = "AuthorID"];
  google.protobuf.Timestamp   available = 3 [(gogoproto.customname) = "Available"];
  BookType                    booktype  = 4 [(gogoproto.customname) = "Booktype"];
  string                      isbn      = 5 [(gogoproto.customname) = "Isbn"];
  int32                       pages     = 6 [(gogoproto.customname) = "Pages"];
  google.protobuf.StringValue summary   = 7 [(gogoproto.customname) = "Summary"];
  string                      title     = 8 [(gogoproto.customname) = "Title"];
}

message ListBooksRequest {
  // The fields on this ListBooksRequest are used to filter for rows from
  // the books table backend. The templates generate fields for primary and
  // foreign keys automatically. If additional fields are needed for filtering, they
  // would need to be added after code generation.
  repeated int32  id        = 1 [(gogoproto.customname) = "ID"];        // (PK)
  repeated string author_id = 2 [(gogoproto.customname) = "AuthorID"];  // (FK)

  // Manually added filters:
}

message ListBooksResponse {
  repeated Books books = 1 [(gogoproto.customname) = "Books"];
}

message GetBooksRequest {
  int32 id = 1 [(gogoproto.customname) = "ID"];  // (PK)
}

message CreateBooksRequest {
  Books books = 1 [(gogoproto.customname) = "Books"];
}

message UpdateBooksRequest {
  Books                     books       = 1 [(gogoproto.customname) = "Books"];
  google.protobuf.FieldMask update_mask = 2;
}

message DeleteBooksRequest {
  int32 id = 1 [(gogoproto.customname) = "ID"];  // (PK)
}

service GeneratedService {
  rpc ListAuthors(ListAuthorsRequest) returns (ListAuthorsResponse) {};
  rpc GetAuthors(GetAuthorsRequest) returns (Authors) {};
  rpc CreateAuthors(CreateAuthorsRequest) returns (Authors) {};
  rpc UpdateAuthors(UpdateAuthorsRequest) returns (Authors) {};
  rpc DeleteAuthors(DeleteAuthorsRequest) returns (google.protobuf.Empty) {};

  rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {};
  rpc GetBooks(GetBooksRequest) returns (Books) {};
  rpc CreateBooks(CreateBooksRequest) returns (Books) {};
  rpc UpdateBooks(UpdateBooksRequest) returns (Books) {};
  rpc DeleteBooks(DeleteBooksRequest) returns (google.protobuf.Empty) {};
}
