// Code generated by gnorm, DO NOT EDIT!
{{- $rootPkg := .Params.RootPkg}}
{{- /*
If you have more than one enum, you will hit this issue:
- https://github.com/gnormal/gnorm/issues/115
*/}}
syntax = "proto3";

package {{$rootPkg}};

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";


option go_package = "{{$rootPkg}}";


{{range .Schema.Enums}}
enum {{.Name}} {
{{- $fieldIdx := 0 -}}
{{- range .Values}}
	{{snakeUpper .DBName}} = {{$fieldIdx}};
	{{- $fieldIdx = inc $fieldIdx -}}
{{- end}}
}{{end}}

{{range .Schema.Tables}}{{if eq .Type "BASE TABLE"}}
{{$table := .DBName -}}
{{$schema := .Schema.DBName -}}
{{$colsByName := .ColumnsByName -}}
{{$nonPKDBNames := .Columns.DBNames.Sorted.Except .PrimaryKeys.DBNames -}}

{{if .Comment}}// {{.Comment}}{{end}}
message {{.Name}} {
{{- $fieldIdx := 1 -}}
{{- range .PrimaryKeys.DBNames.Sorted}}{{ with (index $colsByName .)}}
  {{- if .Comment}}
  // {{.DBName}}, {{.Comment}}{{end}}
	{{.Type}} {{.DBName}} = {{$fieldIdx}} [(gogoproto.customname) = "{{.Name}}"]; // (PK)
	{{- $fieldIdx = inc $fieldIdx -}}
{{- end}}{{end}}
{{- range $nonPKDBNames}}{{ with (index $colsByName .) }}
	{{- if .Comment}}
	// {{.DBName}}, {{.Comment}}{{end}}
	{{.Type}} {{.DBName}} = {{$fieldIdx}} [(gogoproto.customname) = "{{.Name}}"];
	{{- $fieldIdx = inc $fieldIdx -}}
{{- end}}{{end}}
}

message List{{plural .Name}}Request {
	// The fields on this List{{plural .Name}}Request are used to filter for rows from
	// the {{.DBName}} table backend. The templates generate fields for primary and
	// foreign keys automatically. If additional fields are needed for filtering, they
	// would need to be added after code generation.
{{- $fieldIdx := 1 -}}
{{- range .PrimaryKeys.DBNames.Sorted}}{{ with (index $colsByName .)}}
	repeated {{.Type}} {{.DBName}} = {{$fieldIdx}} [(gogoproto.customname) = "{{.Name}}"]; // (PK)
	{{- $fieldIdx = inc $fieldIdx -}}
{{- end}}{{end}}
{{- range .ForeignKeys}}
{{- range .FKColumns}}
{{- with .Column}}
	repeated {{.Type}} {{.DBName}} = {{$fieldIdx}} [(gogoproto.customname) = "{{.Name}}"]; // (FK)
	{{- $fieldIdx = inc $fieldIdx -}}
{{- end}}{{end}}{{end}}

	// Manually added filters:
}

message List{{plural .Name}}Response {
	repeated {{.Name}} {{toLower (plural .Name)}} = 1 [(gogoproto.customname) = "{{plural .Name}}"];
}

message Get{{.Name}}Request {
	{{- $fieldIdx := 1 -}}
	{{- range .PrimaryKeys.DBNames.Sorted}}{{ with (index $colsByName .)}}
	{{.Type}} {{.DBName}} = {{$fieldIdx}} [(gogoproto.customname) = "{{.Name}}"]; // (PK)
	{{- $fieldIdx = inc $fieldIdx -}}
	{{end}}{{end}}
}

message Create{{.Name}}Request {
	{{.Name}} {{.DBName}} = 1 [(gogoproto.customname) = "{{.Name}}"];
}

message Update{{.Name}}Request {
	{{.Name}} {{.DBName}} = 1 [(gogoproto.customname) = "{{.Name}}"];
	google.protobuf.FieldMask update_mask = 2;
}

message Delete{{.Name}}Request {
	{{- $fieldIdx := 1 -}}
	{{- range .PrimaryKeys.DBNames.Sorted}}{{ with (index $colsByName .)}}
	{{.Type}} {{.DBName}} = {{$fieldIdx}} [(gogoproto.customname) = "{{.Name}}"]; // (PK)
	{{- $fieldIdx = inc $fieldIdx -}}
	{{end}}{{end}}
}
{{end}}{{end}}

service {{.Params.GRPCService}} {
	{{range .Schema.Tables -}}{{if eq .Type "BASE TABLE" -}}
	rpc List{{plural .Name}} (List{{plural .Name}}Request) returns (List{{plural .Name}}Response) {};
	rpc Get{{.Name}} (Get{{.Name}}Request) returns ({{.Name}}) {};
	rpc Create{{.Name}} (Create{{.Name}}Request) returns ({{.Name}}) {};
	rpc Update{{.Name}} (Update{{.Name}}Request) returns ({{.Name}}) {};
	rpc Delete{{.Name}} (Delete{{.Name}}Request) returns (google.protobuf.Empty) {};

	{{end}}{{end}}
}
